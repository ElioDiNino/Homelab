services:
  caddy:
    image: ghcr.io/eliodinino/homelab/caddy:latest
    build: .
    restart: always
    volumes:
      - data:/data
      - config:/config
      - socket-proxy:/socket-proxy:ro
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    cap_add:
      - NET_ADMIN
    networks:
      - proxy-internal
    secrets:
      - cloudflare_api_token
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      # Docker Proxy configuration
      DOCKER_HOST: unix:///socket-proxy/docker.sock
      CADDY_INGRESS_NETWORKS: proxy-internal

      # Caddyfile variables
      CLOUDFLARE_API_TOKEN_FILE: /run/secrets/cloudflare_api_token
      ENVIRONMENT: ${ENVIRONMENT:?error}
      CERTIFICATES_EMAIL: ${CERTIFICATES_EMAIL:?error}
      INTERNAL_DOMAIN: ${INTERNAL_DOMAIN:?error}
      DASHBOARD_SUBDOMAIN: ${DASHBOARD_SUBDOMAIN:?error}
      PROXMOX_HOST: ${PROXMOX_HOST:?error}
      HEXOS_HOST: ${HEXOS_HOST:?error}
      HAOS_HOST: ${HAOS_HOST:?error}
      SENTRY_CSP_ENDPOINT: ${SENTRY_CSP_ENDPOINT:?error}
    labels:
      diun.enable: true
      diun.watch_repo: false
      diun.include_tags: ^latest$

  caddy-config:
    image: traefik/whoami:latest
    restart: always
    networks:
      - proxy-internal
    labels:
      diun.enable: true
      diun.watch_repo: false
      diun.include_tags: ^latest$

      #### Global Settings ####
      caddy_0.email: "{env.CERTIFICATES_EMAIL}"
      caddy_0.acme_dns: "cloudflare {file.{$$CLOUDFLARE_API_TOKEN_FILE}}"
      caddy_0.dns: "cloudflare {file.{$$CLOUDFLARE_API_TOKEN_FILE}}"
      caddy_0.ech: "ech.{$$INTERNAL_DOMAIN}"

      # When debugging, use debug flag and staging server
      # caddy_0.debug: ""
      # caddy_0.acme_ca: https://acme-staging-v02.api.letsencrypt.org/directory

      #### Snippets ####

      # Get wildcard certificate
      caddy_1: (wildcard)
      caddy_1.tls.dns: "cloudflare {file.{$$CLOUDFLARE_API_TOKEN_FILE}}"
      caddy_1.tls.resolvers: 1.1.1.1 1.0.0.1

      # Skip TLS verify for backend with self-signed HTTPS
      caddy_2: (https)
      caddy_2.transport: http
      caddy_2.transport.tls: ""
      caddy_2.transport.tls_insecure_skip_verify: ""

      #### Wildcard Definitions ####
      caddy_10: "*.{$$INTERNAL_DOMAIN}"
      caddy_10.import: wildcard

      #### Static Definitions ####

      # This debugging container
      # https://github.com/traefik/whoami
      caddy_99: whoami.{$$INTERNAL_DOMAIN}
      caddy_99.reverse_proxy: "{{ upstreams 80 }}"

      # Internal access check
      caddy_100: "ping.{$$INTERNAL_DOMAIN}"
      caddy_100.header.Access-Control-Allow-Origin: "*"
      caddy_100.respond: "`{\"result\": \"Success!\",\"dashboard\": \"https://{$$DASHBOARD_SUBDOMAIN}.{$$INTERNAL_DOMAIN}\"}` 200"

      # Proxmox
      caddy_101: "pve.{$$INTERNAL_DOMAIN}"
      caddy_101.reverse_proxy: "{$$PROXMOX_HOST}:8006"
      caddy_101.reverse_proxy.import: https

      # TrueNAS
      caddy_102: "truenas.{$$INTERNAL_DOMAIN}"
      caddy_102.reverse_proxy: "{$$HEXOS_HOST}:80"

      # Home Assistant OS
      caddy_103: "ha.{$$INTERNAL_DOMAIN}"
      caddy_103.reverse_proxy: "{$$HAOS_HOST}:8123"

  caddy-config-external:
    image: alpine:latest
    command: |
      sh -c "echo \"$$CADDYFILE\" > /mnt/caddy/Caddyfile"
    volumes:
      - config-external-setup:/mnt/caddy
    environment:
      CADDYFILE: |
        (default_404) {
          handle {
            respond 404
          }
        }

        {$$INGEST_EXTERNAL_SUBDOMAIN}.{$$EXTERNAL_DOMAIN}:80 {
          handle_path /analytics/* {
            @plausible path /js/script.js /api/event
            handle @plausible {
              rewrite /js/script.js {$$PLAUSIBLE_SCRIPT}
              reverse_proxy plausible:8000
            }

            import default_404
          }

          import default_404
        }

        {$$IMMICH_EXTERNAL_SUBDOMAIN}.{$$EXTERNAL_DOMAIN}:80 {
          @external path /share/*
          handle @external {
            reverse_proxy immich-public-proxy:3000
          }

          handle {
            redir https://photos.{$$INTERNAL_DOMAIN}{uri} permanent
          }
        }

        :80 {
          import default_404
        }

  caddy-external:
    image: caddy:2
    restart: always
    depends_on:
      - caddy-config-external
    volumes:
      - data-external:/data
      - config-external-setup:/etc/caddy
      - config-external:/config
    networks:
      - proxy-external
      - proxy-plausible
      - proxy-immich-public
    environment:
      INTERNAL_DOMAIN: ${INTERNAL_DOMAIN:?error}
      EXTERNAL_DOMAIN: ${EXTERNAL_DOMAIN:?error}
      INGEST_EXTERNAL_SUBDOMAIN: ${INGEST_EXTERNAL_SUBDOMAIN:?error}
      IMMICH_EXTERNAL_SUBDOMAIN: ${IMMICH_EXTERNAL_SUBDOMAIN:?error}
      PLAUSIBLE_SCRIPT: ${PLAUSIBLE_SCRIPT:-/js/script.file-downloads.hash.outbound-links.js}
    labels:
      diun.enable: true

secrets:
  cloudflare_api_token:
    environment: CLOUDFLARE_API_TOKEN

volumes:
  data:
  config:
  data-external:
  config-external-setup:
  config-external:
  socket-proxy:
    external: true

networks:
  proxy-internal:
    external: true
  proxy-external:
    external: true
  proxy-plausible:
    external: true
  proxy-immich-public:
    external: true
