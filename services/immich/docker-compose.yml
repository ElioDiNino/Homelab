services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:release
    restart: always
    depends_on:
      - redis
      - database
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: quicksync
    volumes:
      - uploads:/data
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      disable: false
    secrets:
      - db_name
      - db_username
      - db_password
    environment:
      TZ: ${TIMEZONE:?error}
      DB_DATABASE_NAME_FILE: /run/secrets/db_name
      DB_USERNAME_FILE: /run/secrets/db_username
      DB_PASSWORD_FILE: /run/secrets/db_password
      REDIS_PASSWORD: ${IMMICH_CACHE_PASSWORD:?error}
      IMMICH_TRUSTED_PROXIES: 172.16.0.0/12
    networks:
      - frontend
      - backend
      - proxy-internal
    labels:
      diun.enable: true
      diun.watch_repo: false
      diun.include_tags: ^release$
      caddy: "photos.{$$INTERNAL_DOMAIN}"
      caddy.reverse_proxy: "{{ upstreams 2283 }}"

  immich-public-proxy:
    image: ghcr.io/alangrainger/immich-public-proxy:latest
    restart: always
    depends_on:
      immich-server:
        condition: service_healthy
    healthcheck:
      test: curl -s http://localhost:3000/share/healthcheck -o /dev/null || exit 1
      start_period: 10s
      timeout: 5s
    environment:
      PUBLIC_BASE_URL: https://${IMMICH_EXTERNAL_SUBDOMAIN:?error}.${EXTERNAL_DOMAIN:?error}
      IMMICH_URL: http://immich-server:2283
      CONFIG: |
        {
          "ipp": {
            "responseHeaders": {
              "Cache-Control": "public, max-age=2592000",
              "Access-Control-Allow-Origin":  "*"
            },
            "singleImageGallery": false,
            "singleItemAutoOpen": true,
            "downloadOriginalPhoto": true,
            "allowSlugLinks": false,
            "allowDownloadAll": 1,
            "showHomePage": true,
            "showGalleryTitle": true,
            "showMetadata": {
              "description": true
            },
            "customInvalidResponse": false
          },
          "lightGallery": {
            "controls": true,
            "download": true,
            "loop": false,
            "allowMediaOverlap": true,

            "thumbnail": true,
            "toggleThumb": true,

            "autoplayFirstVideo": false,
            "gotoNextSlideOnVideoEnd": false,

            "mobileSettings": {
              "controls": false,
              "showCloseIcon": true,
              "download": true
            }
          }
        }
    networks:
      - frontend
      - proxy-immich-public
    labels:
      diun.enable: true
      diun.watch_repo: false
      diun.include_tags: ^latest$

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:release
    restart: always
    volumes:
      - model-cache:/cache
    healthcheck:
      disable: false
    networks:
      - outgoing
      - backend
    labels:
      diun.enable: true
      diun.watch_repo: false
      diun.include_tags: ^release$

  redis:
    image: docker.io/valkey/valkey:8-bookworm@sha256:fea8b3e67b15729d4bb70589eb03367bab9ad1ee89c876f54327fc7c6e618571
    restart: always
    healthcheck:
      test: valkey-cli ping || exit 1
    environment:
      VALKEY_EXTRA_FLAGS: "--requirepass ${IMMICH_CACHE_PASSWORD:?error}"
    networks:
      - backend

  database:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:41eacbe83eca995561fe43814fd4891e16e39632806253848efaf04d3c8a8b84
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    shm_size: 128mb
    secrets:
      - db_name
      - db_username
      - db_password
    environment:
      POSTGRES_DB_FILE: /run/secrets/db_name
      POSTGRES_USER_FILE: /run/secrets/db_username
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_INITDB_ARGS: "--data-checksums"
    networks:
      - backend

secrets:
  db_name:
    environment: IMMICH_DB_DATABASE_NAME
  db_username:
    environment: IMMICH_DB_USERNAME
  db_password:
    environment: IMMICH_DB_PASSWORD

volumes:
  model-cache:
  db-data:
  uploads:
    driver: local
    driver_opts:
      type: cifs
      device: //${HEXOS_HOST:?error}/${IMMICH_HEXOS_FOLDER:-Immich}
      o: username=${IMMICH_HEXOS_USERNAME:?error},password=${IMMICH_HEXOS_PASSWORD:?error},vers=3.0

networks:
  frontend:
  outgoing:
  backend:
    internal: true
  proxy-internal:
    external: true
  proxy-immich-public:
    external: true
